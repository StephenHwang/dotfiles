# Assorted saved commands
# setup in .bashrc
# fzf saved commands and filter comments
#   saved_commands() {
#     sed_command="sed 's/#.*$//;/^$/d'"
#     com_base="tac ~/bin/saved_commands.txt 2> /dev/null | fzf +m"
#     eval $com_base | eval $sed_command
#   }
#   bind '"\C-f": "$(saved_commands)\e\C-e\er\e^"'
vim ~/bin/saved_commands.txt

# split pdf
pdftk myoldfile.pdf cat 1-2 4-5 output mynewfile.pdf
pdftk myoldfile.pdf burst
# combine pdf
pdfunite in1.pdf in2.pdf out.pdf

# qmk
qmk compile
qmk flash  # after pressing reset button on keyboard

# monitor
pcmanfm-qt --desktop-off  # background wallpaper
arandr
autorandr                 # save (-s) and load (-l) profiles
wide_monitor.sh
dual_monitor.sh
single_monitor.sh
upright_monitor.sh
openbox --restart

# wget replacement with continue
curl -L -O url
curl -L -O -C - url

# assorted
cat /etc/*-release                                                 # check system distro
sudo rsync -avxP /home/stephen/ /media/stephen/main/backup/        # backup
find . -exec touch {} \; && echo done                              # renew all timestamp
rsync -ah --progress src dest                                      # cp
du -h -d1 2> /dev/null                                             # file size
wc -L file                                                         # longest line in file
 paste -sd+ | bc                                                  # sum

sudo dpkg --install
tar -zxvf
cmp --silent $old $new || echo "files are different"               # use comm for output
du -ah . | grep -v "/$" | sort -rh > sorted_file_sizes.txt         # sort by filesize
systemctl restart bluetooth           # bluetooth restart
hcitool dev | grep hci > /dev/null && rfkill block bluetooth || rfkill unblock bluetooth  # toggle bluetooth
pavucontrol                           # audio ui
sudoedit                              # sudo vim
systemctl suspend                     # suspend
sudo apt update                       # downloads package info from all configured sources
sudo apt upgrade                      # upgrades packages
&& espeak "Done" && notify-send "Command succeeded" || notify-send "Command failed" # notify
&& notify-send "Succeeded" || notify-send "Failed" && espeak "Done"   # notify


# ding                                                                                                                                                                         #
paplay /usr/share/sounds/freedesktop/stereo/complete.oga && notify-send "Completed"            # local ding
ncat -klc "paplay /usr/share/sounds/freedesktop/stereo/complete.oga && notify-send "Succeeded"" localhost 11111 &    # succeed action
ncat -klc "paplay /usr/share/sounds/freedesktop/stereo/complete.oga && notify-send "Failed""    localhost 11110 &    # fail action
ssh -fNR 11111:localhost:11111 sjhwang@courtyard.gi.ucsc.edu                                                         # succeed tunnel
ssh -fNR 11110:localhost:11110 sjhwang@courtyard.gi.ucsc.edu                                                         # fail tunnel
&& ./succeed_ding.sh || ./fail_ding.sh                                                                               # server-side command, aliased to ding


# aws                                                                                 #
aws s3 cp s3://vg-k8s/users/sjhwang/ .
aws s3 ls s3://vg-k8s/users/sjhwang/

# kubernetes                                                                                                  #
kubectl get jobs -o custom-columns=:.metadata.name | grep '^sjhwang*' | xargs kubectl delete jobs   # kdel
kubectl logs $(kubectl get pods | grep sjhwang | cut -d " " -f 1) 2>/dev/null | head # logs
kubectl get jobs -o custom-columns=:.metadata.name | grep '^sjhwang*'   # jobs
kubectl get pods | grep sjhwang | cut -d " " -f 1                       # pods_id
kubectl get pods | grep sjhwang                                         # pods

# keyboard
pgrep xbindkeys > /dev/null && killall xbindkeys || xbindkeys    # xbindkeys reset
xev                                   # key recorder
xset mouse 3/2 0                      # mouse speed
killall xbindkeys && xbindkeys        # mouse side scroll
setxkbmap && xmodmap ~/.my_keyboard   # set laptop keyboard modmaps

# git
git config --get remote.origin.url
git commit --amend -m "Modify commit message."

# make branches
git checkout -b <branch>
git push -u origin <branch>

# merge branch (merge
git checkout master
git merge branch_to_merge_into_master

# assorted bash
rg --files --hidden -g filename       # search filenames
ag -g <pattern>                       # search filename with pattern
ag <text>                             # search text in files
awk '{print $2}' filename             # cut column 2
cut -f2 filename                      # cut column 2
sort -V                               # version sort
uniq                                  # unique

# tmux                                                                                 #
#   :swap-window -t <window_idx>            # tmux swap window
#   :rename-window <window_name>            # tmux rename window
tmux kill-server       # killall sessions
tmux attach-session -t default2           # attach 2nd view
tmux new-session -t default -s default2   # create 2nd view
tmux new -s default
tmux attach -t default

# ssh                                                                                           #
ssh -X -N -f -L localhost:9999:localhost:9999 sjhwang@courtyard.gi.ucsc.edu          # sshcport
netstat -ntlp | grep LISTEN'                                                         # ports
ssh -X -N -f -L localhost:9999:localhost:9999 sjhwang@courtyard.gi.ucsc.edu          # portc
kill $(ports | grep -o '[0-9]*/ssh' | rev | cut -c5- | rev)                          # portk
mosh sjhwang@courtyard.gi.ucsc.edu
sjhwang@hb.ucsc.edu                           #
shwang@bioinformatics.tenaya.local
sjhwang@courtyard.gi.ucsc.edu

# conda commands                                                                         #
conda create --name myenv                                   # conda create env
conda deactivate; conda remove --yes --name myenv --all     # conda delete env
act                                                         # conda activate
