# Assorted saved commands
# setup in .bashrc
# fzf saved commands and filter comments
#   saved_commands() {
#     sed_command="sed 's/#.*$//;/^$/d'"
#     com_base="tac ~/bin/saved_commands.txt 2> /dev/null | fzf +m"
#     eval $com_base | eval $sed_command
#   }
#   bind '"\C-f": "$(saved_commands)\e\C-e\er\e^"'
vim ~/bin/saved_commands.txt

# wget replacement with continue
curl -L -O your_url
curl -L -O -C - your_url

# assorted
cat /etc/*-release                                                 # check system distro
find . -exec touch {} \; && echo done                              # renew all timestamp
rsync -ah --progress src dest                                      # cp

sudo dpkg --install
tar -zxvf
cmp --silent $old $new || echo "files are different"
du -ah . | grep -v "/$" | sort -rh > sorted_file_sizes.txt         # sort by filesize

# aws                                                                                 #
aws s3 cp s3://vg-k8s/users/sjhwang/ .
aws s3 ls s3://vg-k8s/users/sjhwang/

# kubernetes                                                                                                  #
kubectl get jobs -o custom-columns=:.metadata.name | grep '^sjhwang*' | xargs kubectl delete jobs   # kdel
kubectl logs $(kubectl get pods | grep sjhwang | cut -d " " -f 1) 2>/dev/null | head # logs
kubectl get jobs -o custom-columns=:.metadata.name | grep '^sjhwang*'   # jobs
kubectl get pods | grep sjhwang | cut -d " " -f 1                       # pods_id
kubectl get pods | grep sjhwang                                         # pods

# git
git config --get remote.origin.url
git commit --amend -m "Modify commit message."

# make branches
git checkout -b <branch>
git push -u origin <branch>

# merge branch (merge
git checkout master
git merge branch_to_merge_into_master

# assorted bash
rg --files --hidden -g filename       # search filenames
ag -g <pattern>                       # search filename with pattern
ag <text>                             # search text in files
awk '{print $2}' filename             # cut column 2
cut -f2 filename                      # cut column 2
sort -V                               # version sort
uniq                                  # unique

# tmux                                                                                 #
#   :swap-window -t <window_idx>            # tmux swap window
#   :rename-window <window_name>            # tmux rename window
tmux kill-server       # killall sessions
tmux new-session -t vg -s vg2
tmux attach-session -t vg2
tmux new -s vg
tmux attach -t vg

# vg
 . ./source_me.sh && make -j 8 && echo 'Compiled vg succesfully'       # vg compile

# conda commands                                                                         #
conda create --name myenv
conda remove --name myenv --all
act  # conda activate
